-- 1. ユーザーテーブル
CREATE TABLE users (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  email TEXT UNIQUE NOT NULL,
  name TEXT,
  password TEXT NOT NULL,
  role TEXT DEFAULT 'user', -- 'admin' または 'user'
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. マップテーブル
CREATE TABLE maps (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  map_id TEXT UNIQUE NOT NULL,
  title TEXT NOT NULL,
  description TEXT,
  user_id UUID REFERENCES users(id) ON DELETE CASCADE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 3. 階層テーブル
CREATE TABLE floors (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  map_id UUID REFERENCES maps(id) ON DELETE CASCADE,
  floor_number INTEGER NOT NULL,
  name TEXT NOT NULL,
  image_url TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 4. ピンテーブル
CREATE TABLE pins (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  floor_id UUID REFERENCES floors(id) ON DELETE CASCADE,
  title TEXT NOT NULL,
  description TEXT,
  x_position DECIMAL NOT NULL,
  y_position DECIMAL NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Row Level Security (RLS) ポリシーの設定
-- 自分のマップのみ編集可能、閲覧はすべてのユーザーに許可

-- マップのRLSポリシー
ALTER TABLE maps ENABLE ROW LEVEL SECURITY;

CREATE POLICY "maps_select_policy"
ON maps FOR SELECT
USING (true);

CREATE POLICY "maps_insert_policy"
ON maps FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "maps_update_policy"
ON maps FOR UPDATE
USING (auth.uid() = user_id);

CREATE POLICY "maps_delete_policy"
ON maps FOR DELETE
USING (auth.uid() = user_id);

-- 階層のRLSポリシー
ALTER TABLE floors ENABLE ROW LEVEL SECURITY;

CREATE POLICY "floors_select_policy"
ON floors FOR SELECT
USING (true);

CREATE POLICY "floors_insert_update_delete_policy"
ON floors FOR ALL
USING (
  EXISTS (
    SELECT 1 FROM maps
    WHERE maps.id = floors.map_id
    AND maps.user_id = auth.uid()
  )
);

-- ピンのRLSポリシー
ALTER TABLE pins ENABLE ROW LEVEL SECURITY;

CREATE POLICY "pins_select_policy"
ON pins FOR SELECT
USING (true);

CREATE POLICY "pins_insert_update_delete_policy"
ON pins FOR ALL
USING (
  EXISTS (
    SELECT 1 FROM floors
    JOIN maps ON floors.map_id = maps.id
    WHERE floors.id = pins.floor_id
    AND maps.user_id = auth.uid()
  )
);

-- 画像ストレージのバケットを作成
INSERT INTO storage.buckets (id, name, public) VALUES ('floor_images', 'floor_images', true);

-- 画像ストレージのポリシー
CREATE POLICY "floor_images_select_policy"
ON storage.objects FOR SELECT
USING (bucket_id = 'floor_images');

CREATE POLICY "floor_images_insert_policy"
ON storage.objects FOR INSERT
WITH CHECK (bucket_id = 'floor_images' AND auth.role() = 'authenticated');

-- マップテーブルに自由編集フラグを追加
ALTER TABLE maps ADD COLUMN is_publicly_editable BOOLEAN DEFAULT false;

-- 編集者ログテーブルの作成（ニックネームでの編集を記録）
CREATE TABLE public_editors (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  map_id UUID REFERENCES maps(id) ON DELETE CASCADE,
  nickname TEXT NOT NULL,
  editor_token TEXT NOT NULL, -- 簡易認証用のトークン
  last_active TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 公開編集のピンには編集者情報を記録するためのカラムを追加
ALTER TABLE pins ADD COLUMN editor_id UUID REFERENCES public_editors(id) NULL;
ALTER TABLE pins ADD COLUMN editor_nickname TEXT NULL;

-- 公開編集可能なマップのピンは誰でも追加/編集できるようにポリシーを修正
CREATE POLICY "pins_public_edit_policy"
ON pins FOR INSERT
WITH CHECK (
  EXISTS (
    SELECT 1 FROM floors
    JOIN maps ON floors.map_id = maps.id
    WHERE floors.id = pins.floor_id
    AND maps.is_publicly_editable = true
  )
);

CREATE POLICY "pins_public_update_policy"
ON pins FOR UPDATE
USING (
  EXISTS (
    SELECT 1 FROM floors
    JOIN maps ON floors.map_id = maps.id
    WHERE floors.id = pins.floor_id
    AND maps.is_publicly_editable = true
  )
);

CREATE POLICY "pins_public_delete_policy"
ON pins FOR DELETE
USING (
  EXISTS (
    SELECT 1 FROM floors
    JOIN maps ON floors.map_id = maps.id
    WHERE floors.id = pins.floor_id
    AND maps.is_publicly_editable = true
  )
);

-- 編集者ログのポリシー
ALTER TABLE public_editors ENABLE ROW LEVEL SECURITY;

CREATE POLICY "public_editors_select_policy"
ON public_editors FOR SELECT
USING (true);

CREATE POLICY "public_editors_insert_policy"
ON public_editors FOR INSERT
WITH CHECK (
  EXISTS (
    SELECT 1 FROM maps
    WHERE maps.id = public_editors.map_id
    AND maps.is_publicly_editable = true
  )
);